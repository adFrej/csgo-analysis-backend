from django.db import models
from django_mysql.models import Bit1BooleanField


class Game(models.Model):
    id = models.SmallAutoField(db_column='ID', primary_key=True)
    demoname = models.TextField(db_column='demoName', blank=True, null=True)
    matchname = models.TextField(db_column='matchName', blank=True, null=True)
    clientname = models.TextField(db_column='clientName', blank=True, null=True)
    mapname = models.TextField(db_column='mapName', blank=True, null=True)
    tickrate = models.PositiveIntegerField(db_column='tickRate', blank=True, null=True)
    playbackticks = models.PositiveIntegerField(db_column='playbackTicks', blank=True, null=True)
    parserate = models.PositiveIntegerField(db_column='parseRate', blank=True, null=True)
    createdtimestamp = models.DateTimeField(db_column='createdTimestamp', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'game'


class Round(models.Model):
    roundnum = models.PositiveSmallIntegerField(db_column='roundNum', primary_key=True)
    matchid = models.ForeignKey(Game, models.DO_NOTHING, db_column='matchID')
    starttick = models.PositiveIntegerField(db_column='startTick', blank=True, null=True)
    freezetimeendtick = models.PositiveIntegerField(db_column='freezeTimeEndTick', blank=True, null=True)
    endtick = models.PositiveIntegerField(db_column='endTick', blank=True, null=True)
    endofficialtick = models.PositiveIntegerField(db_column='endOfficialTick', blank=True, null=True)
    tscore = models.PositiveSmallIntegerField(db_column='tScore', blank=True, null=True)
    ctscore = models.PositiveSmallIntegerField(db_column='ctScore', blank=True, null=True)
    endtscore = models.PositiveSmallIntegerField(db_column='endTScore', blank=True, null=True)
    endctscore = models.PositiveSmallIntegerField(db_column='endCTScore', blank=True, null=True)
    tteam = models.TextField(db_column='tTeam', blank=True, null=True)
    ctteam = models.TextField(db_column='ctTeam', blank=True, null=True)
    winningside = models.CharField(db_column='winningSide', max_length=2, blank=True, null=True)
    winningteam = models.TextField(db_column='winningTeam', blank=True, null=True)
    losingteam = models.TextField(db_column='losingTeam', blank=True, null=True)
    roundendreason = models.TextField(db_column='roundEndReason', blank=True, null=True)
    ctfreezetimeendeqval = models.PositiveIntegerField(db_column='ctFreezeTimeEndEqVal', blank=True, null=True)
    ctroundstarteqval = models.PositiveIntegerField(db_column='ctRoundStartEqVal', blank=True, null=True)
    ctroundspendmoney = models.PositiveIntegerField(db_column='ctRoundSpendMoney', blank=True, null=True)
    ctbuytype = models.TextField(db_column='ctBuyType', blank=True, null=True)
    tfreezetimeendeqval = models.PositiveIntegerField(db_column='tFreezeTimeEndEqVal', blank=True, null=True)
    troundstarteqval = models.PositiveIntegerField(db_column='tRoundStartEqVal', blank=True, null=True)
    troundspendmoney = models.PositiveIntegerField(db_column='tRoundSpendMoney', blank=True, null=True)
    tbuytype = models.TextField(db_column='tBuyType', blank=True, null=True)
    endtickcorrect = models.PositiveIntegerField(db_column='endTickCorrect', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'round'
        unique_together = (('matchid', 'roundnum'),)


class Player(models.Model):
    id = models.AutoField(db_column='ID', primary_key=True)
    steamid = models.CharField(db_column='steamID', max_length=17, blank=True, null=True)
    name = models.TextField(blank=True, null=True)
    teamname = models.TextField(db_column='teamName', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'player'


class Frame(models.Model):
    matchid = models.ForeignKey('Game', models.DO_NOTHING, db_column='matchID')
    roundnum = models.PositiveSmallIntegerField(db_column='roundNum')
    tick = models.PositiveIntegerField(primary_key=True)
    clocktime = models.CharField(db_column='clockTime', max_length=5, blank=True, null=True)
    bombplanted = Bit1BooleanField(db_column='bombPlanted', blank=True, null=True)
    bomb_x = models.FloatField(blank=True, null=True)
    bomb_y = models.FloatField(blank=True, null=True)
    bomb_z = models.FloatField(blank=True, null=True)
    ctplayer_1 = models.ForeignKey('Player', models.DO_NOTHING, related_name='ct1', db_column='ctPlayer_1_ID', blank=True, null=True)
    ctplayer_1_decoygrenade = models.IntegerField(db_column='ctPlayer_1_DecoyGrenade', blank=True, null=True)
    ctplayer_1_flashbang = models.IntegerField(db_column='ctPlayer_1_Flashbang', blank=True, null=True)
    ctplayer_1_hegrenade = models.IntegerField(db_column='ctPlayer_1_HEGrenade', blank=True, null=True)
    ctplayer_1_smokegrenade = models.IntegerField(db_column='ctPlayer_1_SmokeGrenade', blank=True, null=True)
    ctplayer_1_activeweapon = models.TextField(db_column='ctPlayer_1_activeWeapon', blank=True, null=True)
    ctplayer_1_armor = models.PositiveIntegerField(db_column='ctPlayer_1_armor', blank=True, null=True)
    ctplayer_1_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='ctPlayer_1_equipmentValueFreezetimeEnd', blank=True, null=True)
    ctplayer_1_eyex = models.FloatField(db_column='ctPlayer_1_eyeX', blank=True, null=True)
    ctplayer_1_eyey = models.FloatField(db_column='ctPlayer_1_eyeY', blank=True, null=True)
    ctplayer_1_eyez = models.FloatField(db_column='ctPlayer_1_eyeZ', blank=True, null=True)
    ctplayer_1_firegrenades = models.IntegerField(db_column='ctPlayer_1_fireGrenades', blank=True, null=True)
    ctplayer_1_hasbomb = Bit1BooleanField(db_column='ctPlayer_1_hasBomb', blank=True, null=True)
    ctplayer_1_hasdefuse = Bit1BooleanField(db_column='ctPlayer_1_hasDefuse', blank=True, null=True)
    ctplayer_1_hashelmet = Bit1BooleanField(db_column='ctPlayer_1_hasHelmet', blank=True, null=True)
    ctplayer_1_hp = models.PositiveIntegerField(db_column='ctPlayer_1_hp', blank=True, null=True)
    ctplayer_1_isairborne = Bit1BooleanField(db_column='ctPlayer_1_isAirborne', blank=True, null=True)
    ctplayer_1_isalive = Bit1BooleanField(db_column='ctPlayer_1_isAlive', blank=True, null=True)
    ctplayer_1_isblinded = Bit1BooleanField(db_column='ctPlayer_1_isBlinded', blank=True, null=True)
    ctplayer_1_isbot = Bit1BooleanField(db_column='ctPlayer_1_isBot', blank=True, null=True)
    ctplayer_1_isdefusing = Bit1BooleanField(db_column='ctPlayer_1_isDefusing', blank=True, null=True)
    ctplayer_1_isducking = Bit1BooleanField(db_column='ctPlayer_1_isDucking', blank=True, null=True)
    ctplayer_1_isduckinginprogress = Bit1BooleanField(db_column='ctPlayer_1_isDuckingInProgress', blank=True, null=True)
    ctplayer_1_isplanting = Bit1BooleanField(db_column='ctPlayer_1_isPlanting', blank=True, null=True)
    ctplayer_1_isreloading = Bit1BooleanField(db_column='ctPlayer_1_isReloading', blank=True, null=True)
    ctplayer_1_isscoped = Bit1BooleanField(db_column='ctPlayer_1_isScoped', blank=True, null=True)
    ctplayer_1_isunduckinginprogress = Bit1BooleanField(db_column='ctPlayer_1_isUnDuckingInProgress', blank=True, null=True)
    ctplayer_1_mainweapon = models.TextField(db_column='ctPlayer_1_mainWeapon', blank=True, null=True)
    ctplayer_1_ping = models.SmallIntegerField(db_column='ctPlayer_1_ping', blank=True, null=True)
    ctplayer_1_secondaryweapon = models.TextField(db_column='ctPlayer_1_secondaryWeapon', blank=True, null=True)
    ctplayer_1_velocityx = models.FloatField(db_column='ctPlayer_1_velocityX', blank=True, null=True)
    ctplayer_1_velocityy = models.FloatField(db_column='ctPlayer_1_velocityY', blank=True, null=True)
    ctplayer_1_velocityz = models.FloatField(db_column='ctPlayer_1_velocityZ', blank=True, null=True)
    ctplayer_1_viewx = models.FloatField(db_column='ctPlayer_1_viewX', blank=True, null=True)
    ctplayer_1_viewy = models.FloatField(db_column='ctPlayer_1_viewY', blank=True, null=True)
    ctplayer_1_x = models.FloatField(db_column='ctPlayer_1_x', blank=True, null=True)
    ctplayer_1_y = models.FloatField(db_column='ctPlayer_1_y', blank=True, null=True)
    ctplayer_1_z = models.FloatField(db_column='ctPlayer_1_z', blank=True, null=True)
    ctplayer_1_zoomlevel = models.IntegerField(db_column='ctPlayer_1_zoomLevel', blank=True, null=True)
    ctplayer_2 = models.ForeignKey('Player', models.DO_NOTHING, related_name='ct2', db_column='ctPlayer_2_ID', blank=True, null=True)
    ctplayer_2_decoygrenade = models.IntegerField(db_column='ctPlayer_2_DecoyGrenade', blank=True, null=True)
    ctplayer_2_flashbang = models.IntegerField(db_column='ctPlayer_2_Flashbang', blank=True, null=True)
    ctplayer_2_hegrenade = models.IntegerField(db_column='ctPlayer_2_HEGrenade', blank=True, null=True)
    ctplayer_2_smokegrenade = models.IntegerField(db_column='ctPlayer_2_SmokeGrenade', blank=True, null=True)
    ctplayer_2_activeweapon = models.TextField(db_column='ctPlayer_2_activeWeapon', blank=True, null=True)
    ctplayer_2_armor = models.PositiveIntegerField(db_column='ctPlayer_2_armor', blank=True, null=True)
    ctplayer_2_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='ctPlayer_2_equipmentValueFreezetimeEnd', blank=True, null=True)
    ctplayer_2_eyex = models.FloatField(db_column='ctPlayer_2_eyeX', blank=True, null=True)
    ctplayer_2_eyey = models.FloatField(db_column='ctPlayer_2_eyeY', blank=True, null=True)
    ctplayer_2_eyez = models.FloatField(db_column='ctPlayer_2_eyeZ', blank=True, null=True)
    ctplayer_2_firegrenades = models.IntegerField(db_column='ctPlayer_2_fireGrenades', blank=True, null=True)
    ctplayer_2_hasbomb = Bit1BooleanField(db_column='ctPlayer_2_hasBomb', blank=True, null=True)
    ctplayer_2_hasdefuse = Bit1BooleanField(db_column='ctPlayer_2_hasDefuse', blank=True, null=True)
    ctplayer_2_hashelmet = Bit1BooleanField(db_column='ctPlayer_2_hasHelmet', blank=True, null=True)
    ctplayer_2_hp = models.PositiveIntegerField(db_column='ctPlayer_2_hp', blank=True, null=True)
    ctplayer_2_isairborne = Bit1BooleanField(db_column='ctPlayer_2_isAirborne', blank=True, null=True)
    ctplayer_2_isalive = Bit1BooleanField(db_column='ctPlayer_2_isAlive', blank=True, null=True)
    ctplayer_2_isblinded = Bit1BooleanField(db_column='ctPlayer_2_isBlinded', blank=True, null=True)
    ctplayer_2_isbot = Bit1BooleanField(db_column='ctPlayer_2_isBot', blank=True, null=True)
    ctplayer_2_isdefusing = Bit1BooleanField(db_column='ctPlayer_2_isDefusing', blank=True, null=True)
    ctplayer_2_isducking = Bit1BooleanField(db_column='ctPlayer_2_isDucking', blank=True, null=True)
    ctplayer_2_isduckinginprogress = Bit1BooleanField(db_column='ctPlayer_2_isDuckingInProgress', blank=True, null=True)
    ctplayer_2_isplanting = Bit1BooleanField(db_column='ctPlayer_2_isPlanting', blank=True, null=True)
    ctplayer_2_isreloading = Bit1BooleanField(db_column='ctPlayer_2_isReloading', blank=True, null=True)
    ctplayer_2_isscoped = Bit1BooleanField(db_column='ctPlayer_2_isScoped', blank=True, null=True)
    ctplayer_2_isunduckinginprogress = Bit1BooleanField(db_column='ctPlayer_2_isUnDuckingInProgress', blank=True, null=True)
    ctplayer_2_mainweapon = models.TextField(db_column='ctPlayer_2_mainWeapon', blank=True, null=True)
    ctplayer_2_ping = models.SmallIntegerField(db_column='ctPlayer_2_ping', blank=True, null=True)
    ctplayer_2_secondaryweapon = models.TextField(db_column='ctPlayer_2_secondaryWeapon', blank=True, null=True)
    ctplayer_2_velocityx = models.FloatField(db_column='ctPlayer_2_velocityX', blank=True, null=True)
    ctplayer_2_velocityy = models.FloatField(db_column='ctPlayer_2_velocityY', blank=True, null=True)
    ctplayer_2_velocityz = models.FloatField(db_column='ctPlayer_2_velocityZ', blank=True, null=True)
    ctplayer_2_viewx = models.FloatField(db_column='ctPlayer_2_viewX', blank=True, null=True)
    ctplayer_2_viewy = models.FloatField(db_column='ctPlayer_2_viewY', blank=True, null=True)
    ctplayer_2_x = models.FloatField(db_column='ctPlayer_2_x', blank=True, null=True)
    ctplayer_2_y = models.FloatField(db_column='ctPlayer_2_y', blank=True, null=True)
    ctplayer_2_z = models.FloatField(db_column='ctPlayer_2_z', blank=True, null=True)
    ctplayer_2_zoomlevel = models.IntegerField(db_column='ctPlayer_2_zoomLevel', blank=True, null=True)
    ctplayer_3 = models.ForeignKey('Player', models.DO_NOTHING, related_name='ct3', db_column='ctPlayer_3_ID', blank=True, null=True)
    ctplayer_3_decoygrenade = models.IntegerField(db_column='ctPlayer_3_DecoyGrenade', blank=True, null=True)
    ctplayer_3_flashbang = models.IntegerField(db_column='ctPlayer_3_Flashbang', blank=True, null=True)
    ctplayer_3_hegrenade = models.IntegerField(db_column='ctPlayer_3_HEGrenade', blank=True, null=True)
    ctplayer_3_smokegrenade = models.IntegerField(db_column='ctPlayer_3_SmokeGrenade', blank=True, null=True)
    ctplayer_3_activeweapon = models.TextField(db_column='ctPlayer_3_activeWeapon', blank=True, null=True)
    ctplayer_3_armor = models.PositiveIntegerField(db_column='ctPlayer_3_armor', blank=True, null=True)
    ctplayer_3_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='ctPlayer_3_equipmentValueFreezetimeEnd', blank=True, null=True)
    ctplayer_3_eyex = models.FloatField(db_column='ctPlayer_3_eyeX', blank=True, null=True)
    ctplayer_3_eyey = models.FloatField(db_column='ctPlayer_3_eyeY', blank=True, null=True)
    ctplayer_3_eyez = models.FloatField(db_column='ctPlayer_3_eyeZ', blank=True, null=True)
    ctplayer_3_firegrenades = models.IntegerField(db_column='ctPlayer_3_fireGrenades', blank=True, null=True)
    ctplayer_3_hasbomb = Bit1BooleanField(db_column='ctPlayer_3_hasBomb', blank=True, null=True)
    ctplayer_3_hasdefuse = Bit1BooleanField(db_column='ctPlayer_3_hasDefuse', blank=True, null=True)
    ctplayer_3_hashelmet = Bit1BooleanField(db_column='ctPlayer_3_hasHelmet', blank=True, null=True)
    ctplayer_3_hp = models.PositiveIntegerField(db_column='ctPlayer_3_hp', blank=True, null=True)
    ctplayer_3_isairborne = Bit1BooleanField(db_column='ctPlayer_3_isAirborne', blank=True, null=True)
    ctplayer_3_isalive = Bit1BooleanField(db_column='ctPlayer_3_isAlive', blank=True, null=True)
    ctplayer_3_isblinded = Bit1BooleanField(db_column='ctPlayer_3_isBlinded', blank=True, null=True)
    ctplayer_3_isbot = Bit1BooleanField(db_column='ctPlayer_3_isBot', blank=True, null=True)
    ctplayer_3_isdefusing = Bit1BooleanField(db_column='ctPlayer_3_isDefusing', blank=True, null=True)
    ctplayer_3_isducking = Bit1BooleanField(db_column='ctPlayer_3_isDucking', blank=True, null=True)
    ctplayer_3_isduckinginprogress = Bit1BooleanField(db_column='ctPlayer_3_isDuckingInProgress', blank=True, null=True)
    ctplayer_3_isplanting = Bit1BooleanField(db_column='ctPlayer_3_isPlanting', blank=True, null=True)
    ctplayer_3_isreloading = Bit1BooleanField(db_column='ctPlayer_3_isReloading', blank=True, null=True)
    ctplayer_3_isscoped = Bit1BooleanField(db_column='ctPlayer_3_isScoped', blank=True, null=True)
    ctplayer_3_isunduckinginprogress = Bit1BooleanField(db_column='ctPlayer_3_isUnDuckingInProgress', blank=True, null=True)
    ctplayer_3_mainweapon = models.TextField(db_column='ctPlayer_3_mainWeapon', blank=True, null=True)
    ctplayer_3_ping = models.SmallIntegerField(db_column='ctPlayer_3_ping', blank=True, null=True)
    ctplayer_3_secondaryweapon = models.TextField(db_column='ctPlayer_3_secondaryWeapon', blank=True, null=True)
    ctplayer_3_velocityx = models.FloatField(db_column='ctPlayer_3_velocityX', blank=True, null=True)
    ctplayer_3_velocityy = models.FloatField(db_column='ctPlayer_3_velocityY', blank=True, null=True)
    ctplayer_3_velocityz = models.FloatField(db_column='ctPlayer_3_velocityZ', blank=True, null=True)
    ctplayer_3_viewx = models.FloatField(db_column='ctPlayer_3_viewX', blank=True, null=True)
    ctplayer_3_viewy = models.FloatField(db_column='ctPlayer_3_viewY', blank=True, null=True)
    ctplayer_3_x = models.FloatField(db_column='ctPlayer_3_x', blank=True, null=True)
    ctplayer_3_y = models.FloatField(db_column='ctPlayer_3_y', blank=True, null=True)
    ctplayer_3_z = models.FloatField(db_column='ctPlayer_3_z', blank=True, null=True)
    ctplayer_3_zoomlevel = models.IntegerField(db_column='ctPlayer_3_zoomLevel', blank=True, null=True)
    ctplayer_4 = models.ForeignKey('Player', models.DO_NOTHING, related_name='ct4', db_column='ctPlayer_4_ID', blank=True, null=True)
    ctplayer_4_decoygrenade = models.IntegerField(db_column='ctPlayer_4_DecoyGrenade', blank=True, null=True)
    ctplayer_4_flashbang = models.IntegerField(db_column='ctPlayer_4_Flashbang', blank=True, null=True)
    ctplayer_4_hegrenade = models.IntegerField(db_column='ctPlayer_4_HEGrenade', blank=True, null=True)
    ctplayer_4_smokegrenade = models.IntegerField(db_column='ctPlayer_4_SmokeGrenade', blank=True, null=True)
    ctplayer_4_activeweapon = models.TextField(db_column='ctPlayer_4_activeWeapon', blank=True, null=True)
    ctplayer_4_armor = models.PositiveIntegerField(db_column='ctPlayer_4_armor', blank=True, null=True)
    ctplayer_4_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='ctPlayer_4_equipmentValueFreezetimeEnd', blank=True, null=True)
    ctplayer_4_eyex = models.FloatField(db_column='ctPlayer_4_eyeX', blank=True, null=True)
    ctplayer_4_eyey = models.FloatField(db_column='ctPlayer_4_eyeY', blank=True, null=True)
    ctplayer_4_eyez = models.FloatField(db_column='ctPlayer_4_eyeZ', blank=True, null=True)
    ctplayer_4_firegrenades = models.IntegerField(db_column='ctPlayer_4_fireGrenades', blank=True, null=True)
    ctplayer_4_hasbomb = Bit1BooleanField(db_column='ctPlayer_4_hasBomb', blank=True, null=True)
    ctplayer_4_hasdefuse = Bit1BooleanField(db_column='ctPlayer_4_hasDefuse', blank=True, null=True)
    ctplayer_4_hashelmet = Bit1BooleanField(db_column='ctPlayer_4_hasHelmet', blank=True, null=True)
    ctplayer_4_hp = models.PositiveIntegerField(db_column='ctPlayer_4_hp', blank=True, null=True)
    ctplayer_4_isairborne = Bit1BooleanField(db_column='ctPlayer_4_isAirborne', blank=True, null=True)
    ctplayer_4_isalive = Bit1BooleanField(db_column='ctPlayer_4_isAlive', blank=True, null=True)
    ctplayer_4_isblinded = Bit1BooleanField(db_column='ctPlayer_4_isBlinded', blank=True, null=True)
    ctplayer_4_isbot = Bit1BooleanField(db_column='ctPlayer_4_isBot', blank=True, null=True)
    ctplayer_4_isdefusing = Bit1BooleanField(db_column='ctPlayer_4_isDefusing', blank=True, null=True)
    ctplayer_4_isducking = Bit1BooleanField(db_column='ctPlayer_4_isDucking', blank=True, null=True)
    ctplayer_4_isduckinginprogress = Bit1BooleanField(db_column='ctPlayer_4_isDuckingInProgress', blank=True, null=True)
    ctplayer_4_isplanting = Bit1BooleanField(db_column='ctPlayer_4_isPlanting', blank=True, null=True)
    ctplayer_4_isreloading = Bit1BooleanField(db_column='ctPlayer_4_isReloading', blank=True, null=True)
    ctplayer_4_isscoped = Bit1BooleanField(db_column='ctPlayer_4_isScoped', blank=True, null=True)
    ctplayer_4_isunduckinginprogress = Bit1BooleanField(db_column='ctPlayer_4_isUnDuckingInProgress', blank=True, null=True)
    ctplayer_4_mainweapon = models.TextField(db_column='ctPlayer_4_mainWeapon', blank=True, null=True)
    ctplayer_4_ping = models.SmallIntegerField(db_column='ctPlayer_4_ping', blank=True, null=True)
    ctplayer_4_secondaryweapon = models.TextField(db_column='ctPlayer_4_secondaryWeapon', blank=True, null=True)
    ctplayer_4_velocityx = models.FloatField(db_column='ctPlayer_4_velocityX', blank=True, null=True)
    ctplayer_4_velocityy = models.FloatField(db_column='ctPlayer_4_velocityY', blank=True, null=True)
    ctplayer_4_velocityz = models.FloatField(db_column='ctPlayer_4_velocityZ', blank=True, null=True)
    ctplayer_4_viewx = models.FloatField(db_column='ctPlayer_4_viewX', blank=True, null=True)
    ctplayer_4_viewy = models.FloatField(db_column='ctPlayer_4_viewY', blank=True, null=True)
    ctplayer_4_x = models.FloatField(db_column='ctPlayer_4_x', blank=True, null=True)
    ctplayer_4_y = models.FloatField(db_column='ctPlayer_4_y', blank=True, null=True)
    ctplayer_4_z = models.FloatField(db_column='ctPlayer_4_z', blank=True, null=True)
    ctplayer_4_zoomlevel = models.IntegerField(db_column='ctPlayer_4_zoomLevel', blank=True, null=True)
    ctplayer_5 = models.ForeignKey('Player', models.DO_NOTHING, related_name='ct5', db_column='ctPlayer_5_ID', blank=True, null=True)
    ctplayer_5_decoygrenade = models.IntegerField(db_column='ctPlayer_5_DecoyGrenade', blank=True, null=True)
    ctplayer_5_flashbang = models.IntegerField(db_column='ctPlayer_5_Flashbang', blank=True, null=True)
    ctplayer_5_hegrenade = models.IntegerField(db_column='ctPlayer_5_HEGrenade', blank=True, null=True)
    ctplayer_5_smokegrenade = models.IntegerField(db_column='ctPlayer_5_SmokeGrenade', blank=True, null=True)
    ctplayer_5_activeweapon = models.TextField(db_column='ctPlayer_5_activeWeapon', blank=True, null=True)
    ctplayer_5_armor = models.PositiveIntegerField(db_column='ctPlayer_5_armor', blank=True, null=True)
    ctplayer_5_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='ctPlayer_5_equipmentValueFreezetimeEnd', blank=True, null=True)
    ctplayer_5_eyex = models.FloatField(db_column='ctPlayer_5_eyeX', blank=True, null=True)
    ctplayer_5_eyey = models.FloatField(db_column='ctPlayer_5_eyeY', blank=True, null=True)
    ctplayer_5_eyez = models.FloatField(db_column='ctPlayer_5_eyeZ', blank=True, null=True)
    ctplayer_5_firegrenades = models.IntegerField(db_column='ctPlayer_5_fireGrenades', blank=True, null=True)
    ctplayer_5_hasbomb = Bit1BooleanField(db_column='ctPlayer_5_hasBomb', blank=True, null=True)
    ctplayer_5_hasdefuse = Bit1BooleanField(db_column='ctPlayer_5_hasDefuse', blank=True, null=True)
    ctplayer_5_hashelmet = Bit1BooleanField(db_column='ctPlayer_5_hasHelmet', blank=True, null=True)
    ctplayer_5_hp = models.PositiveIntegerField(db_column='ctPlayer_5_hp', blank=True, null=True)
    ctplayer_5_isairborne = Bit1BooleanField(db_column='ctPlayer_5_isAirborne', blank=True, null=True)
    ctplayer_5_isalive = Bit1BooleanField(db_column='ctPlayer_5_isAlive', blank=True, null=True)
    ctplayer_5_isblinded = Bit1BooleanField(db_column='ctPlayer_5_isBlinded', blank=True, null=True)
    ctplayer_5_isbot = Bit1BooleanField(db_column='ctPlayer_5_isBot', blank=True, null=True)
    ctplayer_5_isdefusing = Bit1BooleanField(db_column='ctPlayer_5_isDefusing', blank=True, null=True)
    ctplayer_5_isducking = Bit1BooleanField(db_column='ctPlayer_5_isDucking', blank=True, null=True)
    ctplayer_5_isduckinginprogress = Bit1BooleanField(db_column='ctPlayer_5_isDuckingInProgress', blank=True, null=True)
    ctplayer_5_isplanting = Bit1BooleanField(db_column='ctPlayer_5_isPlanting', blank=True, null=True)
    ctplayer_5_isreloading = Bit1BooleanField(db_column='ctPlayer_5_isReloading', blank=True, null=True)
    ctplayer_5_isscoped = Bit1BooleanField(db_column='ctPlayer_5_isScoped', blank=True, null=True)
    ctplayer_5_isunduckinginprogress = Bit1BooleanField(db_column='ctPlayer_5_isUnDuckingInProgress', blank=True, null=True)
    ctplayer_5_mainweapon = models.TextField(db_column='ctPlayer_5_mainWeapon', blank=True, null=True)
    ctplayer_5_ping = models.SmallIntegerField(db_column='ctPlayer_5_ping', blank=True, null=True)
    ctplayer_5_secondaryweapon = models.TextField(db_column='ctPlayer_5_secondaryWeapon', blank=True, null=True)
    ctplayer_5_velocityx = models.FloatField(db_column='ctPlayer_5_velocityX', blank=True, null=True)
    ctplayer_5_velocityy = models.FloatField(db_column='ctPlayer_5_velocityY', blank=True, null=True)
    ctplayer_5_velocityz = models.FloatField(db_column='ctPlayer_5_velocityZ', blank=True, null=True)
    ctplayer_5_viewx = models.FloatField(db_column='ctPlayer_5_viewX', blank=True, null=True)
    ctplayer_5_viewy = models.FloatField(db_column='ctPlayer_5_viewY', blank=True, null=True)
    ctplayer_5_x = models.FloatField(db_column='ctPlayer_5_x', blank=True, null=True)
    ctplayer_5_y = models.FloatField(db_column='ctPlayer_5_y', blank=True, null=True)
    ctplayer_5_z = models.FloatField(db_column='ctPlayer_5_z', blank=True, null=True)
    ctplayer_5_zoomlevel = models.IntegerField(db_column='ctPlayer_5_zoomLevel', blank=True, null=True)
    tplayer_1 = models.ForeignKey('Player', models.DO_NOTHING, related_name='t1', db_column='tPlayer_1_ID', blank=True, null=True)
    tplayer_1_decoygrenade = models.IntegerField(db_column='tPlayer_1_DecoyGrenade', blank=True, null=True)
    tplayer_1_flashbang = models.IntegerField(db_column='tPlayer_1_Flashbang', blank=True, null=True)
    tplayer_1_hegrenade = models.IntegerField(db_column='tPlayer_1_HEGrenade', blank=True, null=True)
    tplayer_1_smokegrenade = models.IntegerField(db_column='tPlayer_1_SmokeGrenade', blank=True, null=True)
    tplayer_1_activeweapon = models.TextField(db_column='tPlayer_1_activeWeapon', blank=True, null=True)
    tplayer_1_armor = models.PositiveIntegerField(db_column='tPlayer_1_armor', blank=True, null=True)
    tplayer_1_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='tPlayer_1_equipmentValueFreezetimeEnd', blank=True, null=True)
    tplayer_1_eyex = models.FloatField(db_column='tPlayer_1_eyeX', blank=True, null=True)
    tplayer_1_eyey = models.FloatField(db_column='tPlayer_1_eyeY', blank=True, null=True)
    tplayer_1_eyez = models.FloatField(db_column='tPlayer_1_eyeZ', blank=True, null=True)
    tplayer_1_firegrenades = models.IntegerField(db_column='tPlayer_1_fireGrenades', blank=True, null=True)
    tplayer_1_hasbomb = Bit1BooleanField(db_column='tPlayer_1_hasBomb', blank=True, null=True)
    tplayer_1_hasdefuse = Bit1BooleanField(db_column='tPlayer_1_hasDefuse', blank=True, null=True)
    tplayer_1_hashelmet = Bit1BooleanField(db_column='tPlayer_1_hasHelmet', blank=True, null=True)
    tplayer_1_hp = models.PositiveIntegerField(db_column='tPlayer_1_hp', blank=True, null=True)
    tplayer_1_isairborne = Bit1BooleanField(db_column='tPlayer_1_isAirborne', blank=True, null=True)
    tplayer_1_isalive = Bit1BooleanField(db_column='tPlayer_1_isAlive', blank=True, null=True)
    tplayer_1_isblinded = Bit1BooleanField(db_column='tPlayer_1_isBlinded', blank=True, null=True)
    tplayer_1_isbot = Bit1BooleanField(db_column='tPlayer_1_isBot', blank=True, null=True)
    tplayer_1_isdefusing = Bit1BooleanField(db_column='tPlayer_1_isDefusing', blank=True, null=True)
    tplayer_1_isducking = Bit1BooleanField(db_column='tPlayer_1_isDucking', blank=True, null=True)
    tplayer_1_isduckinginprogress = Bit1BooleanField(db_column='tPlayer_1_isDuckingInProgress', blank=True, null=True)
    tplayer_1_isplanting = Bit1BooleanField(db_column='tPlayer_1_isPlanting', blank=True, null=True)
    tplayer_1_isreloading = Bit1BooleanField(db_column='tPlayer_1_isReloading', blank=True, null=True)
    tplayer_1_isscoped = Bit1BooleanField(db_column='tPlayer_1_isScoped', blank=True, null=True)
    tplayer_1_isunduckinginprogress = Bit1BooleanField(db_column='tPlayer_1_isUnDuckingInProgress', blank=True, null=True)
    tplayer_1_mainweapon = models.TextField(db_column='tPlayer_1_mainWeapon', blank=True, null=True)
    tplayer_1_ping = models.SmallIntegerField(db_column='tPlayer_1_ping', blank=True, null=True)
    tplayer_1_secondaryweapon = models.TextField(db_column='tPlayer_1_secondaryWeapon', blank=True, null=True)
    tplayer_1_velocityx = models.FloatField(db_column='tPlayer_1_velocityX', blank=True, null=True)
    tplayer_1_velocityy = models.FloatField(db_column='tPlayer_1_velocityY', blank=True, null=True)
    tplayer_1_velocityz = models.FloatField(db_column='tPlayer_1_velocityZ', blank=True, null=True)
    tplayer_1_viewx = models.FloatField(db_column='tPlayer_1_viewX', blank=True, null=True)
    tplayer_1_viewy = models.FloatField(db_column='tPlayer_1_viewY', blank=True, null=True)
    tplayer_1_x = models.FloatField(db_column='tPlayer_1_x', blank=True, null=True)
    tplayer_1_y = models.FloatField(db_column='tPlayer_1_y', blank=True, null=True)
    tplayer_1_z = models.FloatField(db_column='tPlayer_1_z', blank=True, null=True)
    tplayer_1_zoomlevel = models.IntegerField(db_column='tPlayer_1_zoomLevel', blank=True, null=True)
    tplayer_2 = models.ForeignKey('Player', models.DO_NOTHING, related_name='t2', db_column='tPlayer_2_ID', blank=True, null=True)
    tplayer_2_decoygrenade = models.IntegerField(db_column='tPlayer_2_DecoyGrenade', blank=True, null=True)
    tplayer_2_flashbang = models.IntegerField(db_column='tPlayer_2_Flashbang', blank=True, null=True)
    tplayer_2_hegrenade = models.IntegerField(db_column='tPlayer_2_HEGrenade', blank=True, null=True)
    tplayer_2_smokegrenade = models.IntegerField(db_column='tPlayer_2_SmokeGrenade', blank=True, null=True)
    tplayer_2_activeweapon = models.TextField(db_column='tPlayer_2_activeWeapon', blank=True, null=True)
    tplayer_2_armor = models.PositiveIntegerField(db_column='tPlayer_2_armor', blank=True, null=True)
    tplayer_2_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='tPlayer_2_equipmentValueFreezetimeEnd', blank=True, null=True)
    tplayer_2_eyex = models.FloatField(db_column='tPlayer_2_eyeX', blank=True, null=True)
    tplayer_2_eyey = models.FloatField(db_column='tPlayer_2_eyeY', blank=True, null=True)
    tplayer_2_eyez = models.FloatField(db_column='tPlayer_2_eyeZ', blank=True, null=True)
    tplayer_2_firegrenades = models.IntegerField(db_column='tPlayer_2_fireGrenades', blank=True, null=True)
    tplayer_2_hasbomb = Bit1BooleanField(db_column='tPlayer_2_hasBomb', blank=True, null=True)
    tplayer_2_hasdefuse = Bit1BooleanField(db_column='tPlayer_2_hasDefuse', blank=True, null=True)
    tplayer_2_hashelmet = Bit1BooleanField(db_column='tPlayer_2_hasHelmet', blank=True, null=True)
    tplayer_2_hp = models.PositiveIntegerField(db_column='tPlayer_2_hp', blank=True, null=True)
    tplayer_2_isairborne = Bit1BooleanField(db_column='tPlayer_2_isAirborne', blank=True, null=True)
    tplayer_2_isalive = Bit1BooleanField(db_column='tPlayer_2_isAlive', blank=True, null=True)
    tplayer_2_isblinded = Bit1BooleanField(db_column='tPlayer_2_isBlinded', blank=True, null=True)
    tplayer_2_isbot = Bit1BooleanField(db_column='tPlayer_2_isBot', blank=True, null=True)
    tplayer_2_isdefusing = Bit1BooleanField(db_column='tPlayer_2_isDefusing', blank=True, null=True)
    tplayer_2_isducking = Bit1BooleanField(db_column='tPlayer_2_isDucking', blank=True, null=True)
    tplayer_2_isduckinginprogress = Bit1BooleanField(db_column='tPlayer_2_isDuckingInProgress', blank=True, null=True)
    tplayer_2_isplanting = Bit1BooleanField(db_column='tPlayer_2_isPlanting', blank=True, null=True)
    tplayer_2_isreloading = Bit1BooleanField(db_column='tPlayer_2_isReloading', blank=True, null=True)
    tplayer_2_isscoped = Bit1BooleanField(db_column='tPlayer_2_isScoped', blank=True, null=True)
    tplayer_2_isunduckinginprogress = Bit1BooleanField(db_column='tPlayer_2_isUnDuckingInProgress', blank=True, null=True)
    tplayer_2_mainweapon = models.TextField(db_column='tPlayer_2_mainWeapon', blank=True, null=True)
    tplayer_2_ping = models.SmallIntegerField(db_column='tPlayer_2_ping', blank=True, null=True)
    tplayer_2_secondaryweapon = models.TextField(db_column='tPlayer_2_secondaryWeapon', blank=True, null=True)
    tplayer_2_velocityx = models.FloatField(db_column='tPlayer_2_velocityX', blank=True, null=True)
    tplayer_2_velocityy = models.FloatField(db_column='tPlayer_2_velocityY', blank=True, null=True)
    tplayer_2_velocityz = models.FloatField(db_column='tPlayer_2_velocityZ', blank=True, null=True)
    tplayer_2_viewx = models.FloatField(db_column='tPlayer_2_viewX', blank=True, null=True)
    tplayer_2_viewy = models.FloatField(db_column='tPlayer_2_viewY', blank=True, null=True)
    tplayer_2_x = models.FloatField(db_column='tPlayer_2_x', blank=True, null=True)
    tplayer_2_y = models.FloatField(db_column='tPlayer_2_y', blank=True, null=True)
    tplayer_2_z = models.FloatField(db_column='tPlayer_2_z', blank=True, null=True)
    tplayer_2_zoomlevel = models.IntegerField(db_column='tPlayer_2_zoomLevel', blank=True, null=True)
    tplayer_3 = models.ForeignKey('Player', models.DO_NOTHING, related_name='t3', db_column='tPlayer_3_ID', blank=True, null=True)
    tplayer_3_decoygrenade = models.IntegerField(db_column='tPlayer_3_DecoyGrenade', blank=True, null=True)
    tplayer_3_flashbang = models.IntegerField(db_column='tPlayer_3_Flashbang', blank=True, null=True)
    tplayer_3_hegrenade = models.IntegerField(db_column='tPlayer_3_HEGrenade', blank=True, null=True)
    tplayer_3_smokegrenade = models.IntegerField(db_column='tPlayer_3_SmokeGrenade', blank=True, null=True)
    tplayer_3_activeweapon = models.TextField(db_column='tPlayer_3_activeWeapon', blank=True, null=True)
    tplayer_3_armor = models.PositiveIntegerField(db_column='tPlayer_3_armor', blank=True, null=True)
    tplayer_3_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='tPlayer_3_equipmentValueFreezetimeEnd', blank=True, null=True)
    tplayer_3_eyex = models.FloatField(db_column='tPlayer_3_eyeX', blank=True, null=True)
    tplayer_3_eyey = models.FloatField(db_column='tPlayer_3_eyeY', blank=True, null=True)
    tplayer_3_eyez = models.FloatField(db_column='tPlayer_3_eyeZ', blank=True, null=True)
    tplayer_3_firegrenades = models.IntegerField(db_column='tPlayer_3_fireGrenades', blank=True, null=True)
    tplayer_3_hasbomb = Bit1BooleanField(db_column='tPlayer_3_hasBomb', blank=True, null=True)
    tplayer_3_hasdefuse = Bit1BooleanField(db_column='tPlayer_3_hasDefuse', blank=True, null=True)
    tplayer_3_hashelmet = Bit1BooleanField(db_column='tPlayer_3_hasHelmet', blank=True, null=True)
    tplayer_3_hp = models.PositiveIntegerField(db_column='tPlayer_3_hp', blank=True, null=True)
    tplayer_3_isairborne = Bit1BooleanField(db_column='tPlayer_3_isAirborne', blank=True, null=True)
    tplayer_3_isalive = Bit1BooleanField(db_column='tPlayer_3_isAlive', blank=True, null=True)
    tplayer_3_isblinded = Bit1BooleanField(db_column='tPlayer_3_isBlinded', blank=True, null=True)
    tplayer_3_isbot = Bit1BooleanField(db_column='tPlayer_3_isBot', blank=True, null=True)
    tplayer_3_isdefusing = Bit1BooleanField(db_column='tPlayer_3_isDefusing', blank=True, null=True)
    tplayer_3_isducking = Bit1BooleanField(db_column='tPlayer_3_isDucking', blank=True, null=True)
    tplayer_3_isduckinginprogress = Bit1BooleanField(db_column='tPlayer_3_isDuckingInProgress', blank=True, null=True)
    tplayer_3_isplanting = Bit1BooleanField(db_column='tPlayer_3_isPlanting', blank=True, null=True)
    tplayer_3_isreloading = Bit1BooleanField(db_column='tPlayer_3_isReloading', blank=True, null=True)
    tplayer_3_isscoped = Bit1BooleanField(db_column='tPlayer_3_isScoped', blank=True, null=True)
    tplayer_3_isunduckinginprogress = Bit1BooleanField(db_column='tPlayer_3_isUnDuckingInProgress', blank=True, null=True)
    tplayer_3_mainweapon = models.TextField(db_column='tPlayer_3_mainWeapon', blank=True, null=True)
    tplayer_3_ping = models.SmallIntegerField(db_column='tPlayer_3_ping', blank=True, null=True)
    tplayer_3_secondaryweapon = models.TextField(db_column='tPlayer_3_secondaryWeapon', blank=True, null=True)
    tplayer_3_velocityx = models.FloatField(db_column='tPlayer_3_velocityX', blank=True, null=True)
    tplayer_3_velocityy = models.FloatField(db_column='tPlayer_3_velocityY', blank=True, null=True)
    tplayer_3_velocityz = models.FloatField(db_column='tPlayer_3_velocityZ', blank=True, null=True)
    tplayer_3_viewx = models.FloatField(db_column='tPlayer_3_viewX', blank=True, null=True)
    tplayer_3_viewy = models.FloatField(db_column='tPlayer_3_viewY', blank=True, null=True)
    tplayer_3_x = models.FloatField(db_column='tPlayer_3_x', blank=True, null=True)
    tplayer_3_y = models.FloatField(db_column='tPlayer_3_y', blank=True, null=True)
    tplayer_3_z = models.FloatField(db_column='tPlayer_3_z', blank=True, null=True)
    tplayer_3_zoomlevel = models.IntegerField(db_column='tPlayer_3_zoomLevel', blank=True, null=True)
    tplayer_4 = models.ForeignKey('Player', models.DO_NOTHING, related_name='t4', db_column='tPlayer_4_ID', blank=True, null=True)
    tplayer_4_decoygrenade = models.IntegerField(db_column='tPlayer_4_DecoyGrenade', blank=True, null=True)
    tplayer_4_flashbang = models.IntegerField(db_column='tPlayer_4_Flashbang', blank=True, null=True)
    tplayer_4_hegrenade = models.IntegerField(db_column='tPlayer_4_HEGrenade', blank=True, null=True)
    tplayer_4_smokegrenade = models.IntegerField(db_column='tPlayer_4_SmokeGrenade', blank=True, null=True)
    tplayer_4_activeweapon = models.TextField(db_column='tPlayer_4_activeWeapon', blank=True, null=True)
    tplayer_4_armor = models.PositiveIntegerField(db_column='tPlayer_4_armor', blank=True, null=True)
    tplayer_4_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='tPlayer_4_equipmentValueFreezetimeEnd', blank=True, null=True)
    tplayer_4_eyex = models.FloatField(db_column='tPlayer_4_eyeX', blank=True, null=True)
    tplayer_4_eyey = models.FloatField(db_column='tPlayer_4_eyeY', blank=True, null=True)
    tplayer_4_eyez = models.FloatField(db_column='tPlayer_4_eyeZ', blank=True, null=True)
    tplayer_4_firegrenades = models.IntegerField(db_column='tPlayer_4_fireGrenades', blank=True, null=True)
    tplayer_4_hasbomb = Bit1BooleanField(db_column='tPlayer_4_hasBomb', blank=True, null=True)
    tplayer_4_hasdefuse = Bit1BooleanField(db_column='tPlayer_4_hasDefuse', blank=True, null=True)
    tplayer_4_hashelmet = Bit1BooleanField(db_column='tPlayer_4_hasHelmet', blank=True, null=True)
    tplayer_4_hp = models.PositiveIntegerField(db_column='tPlayer_4_hp', blank=True, null=True)
    tplayer_4_isairborne = Bit1BooleanField(db_column='tPlayer_4_isAirborne', blank=True, null=True)
    tplayer_4_isalive = Bit1BooleanField(db_column='tPlayer_4_isAlive', blank=True, null=True)
    tplayer_4_isblinded = Bit1BooleanField(db_column='tPlayer_4_isBlinded', blank=True, null=True)
    tplayer_4_isbot = Bit1BooleanField(db_column='tPlayer_4_isBot', blank=True, null=True)
    tplayer_4_isdefusing = Bit1BooleanField(db_column='tPlayer_4_isDefusing', blank=True, null=True)
    tplayer_4_isducking = Bit1BooleanField(db_column='tPlayer_4_isDucking', blank=True, null=True)
    tplayer_4_isduckinginprogress = Bit1BooleanField(db_column='tPlayer_4_isDuckingInProgress', blank=True, null=True)
    tplayer_4_isplanting = Bit1BooleanField(db_column='tPlayer_4_isPlanting', blank=True, null=True)
    tplayer_4_isreloading = Bit1BooleanField(db_column='tPlayer_4_isReloading', blank=True, null=True)
    tplayer_4_isscoped = Bit1BooleanField(db_column='tPlayer_4_isScoped', blank=True, null=True)
    tplayer_4_isunduckinginprogress = Bit1BooleanField(db_column='tPlayer_4_isUnDuckingInProgress', blank=True, null=True)
    tplayer_4_mainweapon = models.TextField(db_column='tPlayer_4_mainWeapon', blank=True, null=True)
    tplayer_4_ping = models.SmallIntegerField(db_column='tPlayer_4_ping', blank=True, null=True)
    tplayer_4_secondaryweapon = models.TextField(db_column='tPlayer_4_secondaryWeapon', blank=True, null=True)
    tplayer_4_velocityx = models.FloatField(db_column='tPlayer_4_velocityX', blank=True, null=True)
    tplayer_4_velocityy = models.FloatField(db_column='tPlayer_4_velocityY', blank=True, null=True)
    tplayer_4_velocityz = models.FloatField(db_column='tPlayer_4_velocityZ', blank=True, null=True)
    tplayer_4_viewx = models.FloatField(db_column='tPlayer_4_viewX', blank=True, null=True)
    tplayer_4_viewy = models.FloatField(db_column='tPlayer_4_viewY', blank=True, null=True)
    tplayer_4_x = models.FloatField(db_column='tPlayer_4_x', blank=True, null=True)
    tplayer_4_y = models.FloatField(db_column='tPlayer_4_y', blank=True, null=True)
    tplayer_4_z = models.FloatField(db_column='tPlayer_4_z', blank=True, null=True)
    tplayer_4_zoomlevel = models.IntegerField(db_column='tPlayer_4_zoomLevel', blank=True, null=True)
    tplayer_5 = models.ForeignKey('Player', models.DO_NOTHING, related_name='t5', db_column='tPlayer_5_ID', blank=True, null=True)
    tplayer_5_decoygrenade = models.IntegerField(db_column='tPlayer_5_DecoyGrenade', blank=True, null=True)
    tplayer_5_flashbang = models.IntegerField(db_column='tPlayer_5_Flashbang', blank=True, null=True)
    tplayer_5_hegrenade = models.IntegerField(db_column='tPlayer_5_HEGrenade', blank=True, null=True)
    tplayer_5_smokegrenade = models.IntegerField(db_column='tPlayer_5_SmokeGrenade', blank=True, null=True)
    tplayer_5_activeweapon = models.TextField(db_column='tPlayer_5_activeWeapon', blank=True, null=True)
    tplayer_5_armor = models.PositiveIntegerField(db_column='tPlayer_5_armor', blank=True, null=True)
    tplayer_5_equipmentvaluefreezetimeend = models.PositiveSmallIntegerField(db_column='tPlayer_5_equipmentValueFreezetimeEnd', blank=True, null=True)
    tplayer_5_eyex = models.FloatField(db_column='tPlayer_5_eyeX', blank=True, null=True)
    tplayer_5_eyey = models.FloatField(db_column='tPlayer_5_eyeY', blank=True, null=True)
    tplayer_5_eyez = models.FloatField(db_column='tPlayer_5_eyeZ', blank=True, null=True)
    tplayer_5_firegrenades = models.IntegerField(db_column='tPlayer_5_fireGrenades', blank=True, null=True)
    tplayer_5_hasbomb = Bit1BooleanField(db_column='tPlayer_5_hasBomb', blank=True, null=True)
    tplayer_5_hasdefuse = Bit1BooleanField(db_column='tPlayer_5_hasDefuse', blank=True, null=True)
    tplayer_5_hashelmet = Bit1BooleanField(db_column='tPlayer_5_hasHelmet', blank=True, null=True)
    tplayer_5_hp = models.PositiveIntegerField(db_column='tPlayer_5_hp', blank=True, null=True)
    tplayer_5_isairborne = Bit1BooleanField(db_column='tPlayer_5_isAirborne', blank=True, null=True)
    tplayer_5_isalive = Bit1BooleanField(db_column='tPlayer_5_isAlive', blank=True, null=True)
    tplayer_5_isblinded = Bit1BooleanField(db_column='tPlayer_5_isBlinded', blank=True, null=True)
    tplayer_5_isbot = Bit1BooleanField(db_column='tPlayer_5_isBot', blank=True, null=True)
    tplayer_5_isdefusing = Bit1BooleanField(db_column='tPlayer_5_isDefusing', blank=True, null=True)
    tplayer_5_isducking = Bit1BooleanField(db_column='tPlayer_5_isDucking', blank=True, null=True)
    tplayer_5_isduckinginprogress = Bit1BooleanField(db_column='tPlayer_5_isDuckingInProgress', blank=True, null=True)
    tplayer_5_isplanting = Bit1BooleanField(db_column='tPlayer_5_isPlanting', blank=True, null=True)
    tplayer_5_isreloading = Bit1BooleanField(db_column='tPlayer_5_isReloading', blank=True, null=True)
    tplayer_5_isscoped = Bit1BooleanField(db_column='tPlayer_5_isScoped', blank=True, null=True)
    tplayer_5_isunduckinginprogress = Bit1BooleanField(db_column='tPlayer_5_isUnDuckingInProgress', blank=True, null=True)
    tplayer_5_mainweapon = models.TextField(db_column='tPlayer_5_mainWeapon', blank=True, null=True)
    tplayer_5_ping = models.SmallIntegerField(db_column='tPlayer_5_ping', blank=True, null=True)
    tplayer_5_secondaryweapon = models.TextField(db_column='tPlayer_5_secondaryWeapon', blank=True, null=True)
    tplayer_5_velocityx = models.FloatField(db_column='tPlayer_5_velocityX', blank=True, null=True)
    tplayer_5_velocityy = models.FloatField(db_column='tPlayer_5_velocityY', blank=True, null=True)
    tplayer_5_velocityz = models.FloatField(db_column='tPlayer_5_velocityZ', blank=True, null=True)
    tplayer_5_viewx = models.FloatField(db_column='tPlayer_5_viewX', blank=True, null=True)
    tplayer_5_viewy = models.FloatField(db_column='tPlayer_5_viewY', blank=True, null=True)
    tplayer_5_x = models.FloatField(db_column='tPlayer_5_x', blank=True, null=True)
    tplayer_5_y = models.FloatField(db_column='tPlayer_5_y', blank=True, null=True)
    tplayer_5_z = models.FloatField(db_column='tPlayer_5_z', blank=True, null=True)
    tplayer_5_zoomlevel = models.IntegerField(db_column='tPlayer_5_zoomLevel', blank=True, null=True)
    ctPrediction = models.FloatField(db_column='ctPrediction', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'frame'
        unique_together = (('matchid', 'tick'),)


class Elimination(models.Model):
    tick = models.PositiveIntegerField(blank=True, null=True)
    seconds = models.FloatField(blank=True, null=True)
    clocktime = models.CharField(db_column='clockTime', max_length=5, blank=True, null=True)
    attackerid = models.PositiveIntegerField(db_column='attackerID', blank=True, null=True)
    attackerside = models.CharField(db_column='attackerSide', max_length=2, blank=True, null=True)
    attackerx = models.FloatField(db_column='attackerX', blank=True, null=True)
    attackery = models.FloatField(db_column='attackerY', blank=True, null=True)
    attackerz = models.FloatField(db_column='attackerZ', blank=True, null=True)
    attackerviewx = models.FloatField(db_column='attackerViewX', blank=True, null=True)
    attackerviewy = models.FloatField(db_column='attackerViewY', blank=True, null=True)
    victimid = models.PositiveIntegerField(db_column='victimID', blank=True, null=True)
    victimside = models.CharField(db_column='victimSide', max_length=2, blank=True, null=True)
    victimx = models.FloatField(db_column='victimX', blank=True, null=True)
    victimy = models.FloatField(db_column='victimY', blank=True, null=True)
    victimz = models.FloatField(db_column='victimZ', blank=True, null=True)
    victimviewx = models.FloatField(db_column='victimViewX', blank=True, null=True)
    victimviewy = models.FloatField(db_column='victimViewY', blank=True, null=True)
    assisterid = models.PositiveIntegerField(db_column='assisterID', blank=True, null=True)
    assisterside = models.CharField(db_column='assisterSide', max_length=2, blank=True, null=True)
    issuicide = Bit1BooleanField(db_column='isSuicide', blank=True, null=True)
    isteamkill = Bit1BooleanField(db_column='isTeamkill', blank=True, null=True)
    iswallbang = Bit1BooleanField(db_column='isWallbang', blank=True, null=True)
    penetratedobjects = models.IntegerField(db_column='penetratedObjects', blank=True, null=True)
    isfirstkill = Bit1BooleanField(db_column='isFirstKill', blank=True, null=True)
    isheadshot = Bit1BooleanField(db_column='isHeadshot', blank=True, null=True)
    victimblinded = Bit1BooleanField(db_column='victimBlinded', blank=True, null=True)
    attackerblinded = Bit1BooleanField(db_column='attackerBlinded', blank=True, null=True)
    flashthrowerid = models.PositiveIntegerField(db_column='flashThrowerID', blank=True, null=True)
    flashthrowerside = models.CharField(db_column='flashThrowerSide', max_length=2, blank=True, null=True)
    noscope = Bit1BooleanField(db_column='noScope', blank=True, null=True)
    thrusmoke = Bit1BooleanField(db_column='thruSmoke', blank=True, null=True)
    distance = models.FloatField(blank=True, null=True)
    istrade = Bit1BooleanField(db_column='isTrade', blank=True, null=True)
    playertradedid = models.PositiveIntegerField(db_column='playerTradedID', blank=True, null=True)
    weapon = models.TextField(blank=True, null=True)
    weaponclass = models.TextField(db_column='weaponClass', blank=True, null=True)
    roundnum = models.PositiveSmallIntegerField(db_column='roundNum', blank=True, null=True)
    matchid = models.ForeignKey('Frame', models.DO_NOTHING, related_name='matchidEliminationFK', db_column='matchID')
    tick_parsed = models.ForeignKey('Frame', models.DO_NOTHING, related_name='tickEliminationFK', db_column='tick_parsed', blank=True, null=True)
    id = models.PositiveSmallIntegerField(db_column='ID', primary_key=True)

    class Meta:
        managed = False
        db_table = 'elimination'
        unique_together = (('matchid', 'id'),)


class Weaponfire(models.Model):
    tick = models.PositiveIntegerField(blank=True, null=True)
    seconds = models.FloatField(blank=True, null=True)
    clocktime = models.CharField(db_column='clockTime', max_length=5, blank=True, null=True)
    playerid = models.PositiveIntegerField(db_column='playerID', blank=True, null=True)
    playerside = models.CharField(db_column='playerSide', max_length=2, blank=True, null=True)
    playerx = models.FloatField(db_column='playerX', blank=True, null=True)
    playery = models.FloatField(db_column='playerY', blank=True, null=True)
    playerz = models.FloatField(db_column='playerZ', blank=True, null=True)
    playerviewx = models.FloatField(db_column='playerViewX', blank=True, null=True)
    playerviewy = models.FloatField(db_column='playerViewY', blank=True, null=True)
    playerstrafe = Bit1BooleanField(db_column='playerStrafe', blank=True, null=True)
    weapon = models.TextField(blank=True, null=True)
    weaponclass = models.TextField(db_column='weaponClass', blank=True, null=True)
    ammoinmagazine = models.SmallIntegerField(db_column='ammoInMagazine', blank=True, null=True)
    ammoinreserve = models.SmallIntegerField(db_column='ammoInReserve', blank=True, null=True)
    zoomlevel = models.IntegerField(db_column='zoomLevel', blank=True, null=True)
    roundnum = models.PositiveSmallIntegerField(db_column='roundNum', blank=True, null=True)
    matchid = models.ForeignKey(Frame, models.DO_NOTHING, related_name='matchidWeaponfireFK', db_column='matchID')
    tick_parsed = models.ForeignKey(Frame, models.DO_NOTHING, related_name='tickWeaponfireFK', db_column='tick_parsed', blank=True, null=True)
    id = models.PositiveIntegerField(db_column='ID', primary_key=True)

    class Meta:
        managed = False
        db_table = 'weaponfire'
        unique_together = (('matchid', 'id'),)


class Grenade(models.Model):
    throwtick = models.PositiveIntegerField(db_column='throwTick', blank=True, null=True)
    destroytick = models.PositiveIntegerField(db_column='destroyTick', blank=True, null=True)
    throwseconds = models.FloatField(db_column='throwSeconds', blank=True, null=True)
    throwclocktime = models.CharField(db_column='throwClockTime', max_length=5, blank=True, null=True)
    destroyseconds = models.FloatField(db_column='destroySeconds', blank=True, null=True)
    destroyclocktime = models.CharField(db_column='destroyClockTime', max_length=5, blank=True, null=True)
    throwerid = models.PositiveIntegerField(db_column='throwerID', blank=True, null=True)
    throwerside = models.CharField(db_column='throwerSide', max_length=2, blank=True, null=True)
    throwerx = models.FloatField(db_column='throwerX', blank=True, null=True)
    throwery = models.FloatField(db_column='throwerY', blank=True, null=True)
    throwerz = models.FloatField(db_column='throwerZ', blank=True, null=True)
    grenadetype = models.TextField(db_column='grenadeType', blank=True, null=True)
    grenadex = models.FloatField(db_column='grenadeX', blank=True, null=True)
    grenadey = models.FloatField(db_column='grenadeY', blank=True, null=True)
    grenadez = models.FloatField(db_column='grenadeZ', blank=True, null=True)
    entityid = models.CharField(db_column='entityId', max_length=19, blank=True, null=True)
    roundnum = models.PositiveSmallIntegerField(db_column='roundNum', blank=True, null=True)
    matchid = models.ForeignKey(Frame, models.DO_NOTHING, related_name='matchidGrenadeFK', db_column='matchID')
    throwTick_parsed = models.PositiveIntegerField(db_column='throwTick_parsed', blank=True, null=True)
    destroyTick_parsed = models.ForeignKey(Frame, models.DO_NOTHING, related_name='destroyTickGrenadeFK', db_column='destroyTick_parsed', blank=True, null=True)
    id = models.PositiveSmallIntegerField(db_column='ID', primary_key=True)

    class Meta:
        managed = False
        db_table = 'grenade'
        unique_together = (('matchid', 'id'),)


class Damage(models.Model):
    tick = models.PositiveIntegerField(blank=True, null=True)
    seconds = models.FloatField(blank=True, null=True)
    clocktime = models.CharField(db_column='clockTime', max_length=5, blank=True, null=True)
    attackerid = models.PositiveIntegerField(db_column='attackerID', blank=True, null=True)
    attackerside = models.CharField(db_column='attackerSide', max_length=2, blank=True, null=True)
    attackerx = models.FloatField(db_column='attackerX', blank=True, null=True)
    attackery = models.FloatField(db_column='attackerY', blank=True, null=True)
    attackerz = models.FloatField(db_column='attackerZ', blank=True, null=True)
    attackerviewx = models.FloatField(db_column='attackerViewX', blank=True, null=True)
    attackerviewy = models.FloatField(db_column='attackerViewY', blank=True, null=True)
    attackerstrafe = Bit1BooleanField(db_column='attackerStrafe', blank=True, null=True)
    victimid = models.PositiveIntegerField(db_column='victimID', blank=True, null=True)
    victimside = models.CharField(db_column='victimSide', max_length=2, blank=True, null=True)
    victimx = models.FloatField(db_column='victimX', blank=True, null=True)
    victimy = models.FloatField(db_column='victimY', blank=True, null=True)
    victimz = models.FloatField(db_column='victimZ', blank=True, null=True)
    victimviewx = models.FloatField(db_column='victimViewX', blank=True, null=True)
    victimviewy = models.FloatField(db_column='victimViewY', blank=True, null=True)
    weapon = models.TextField(blank=True, null=True)
    weaponclass = models.TextField(db_column='weaponClass', blank=True, null=True)
    hpdamage = models.SmallIntegerField(db_column='hpDamage', blank=True, null=True)
    hpdamagetaken = models.SmallIntegerField(db_column='hpDamageTaken', blank=True, null=True)
    armordamage = models.SmallIntegerField(db_column='armorDamage', blank=True, null=True)
    armordamagetaken = models.SmallIntegerField(db_column='armorDamageTaken', blank=True, null=True)
    hitgroup = models.TextField(db_column='hitGroup', blank=True, null=True)
    isfriendlyfire = Bit1BooleanField(db_column='isFriendlyFire', blank=True, null=True)
    distance = models.FloatField(blank=True, null=True)
    zoomlevel = models.IntegerField(db_column='zoomLevel', blank=True, null=True)
    roundnum = models.PositiveSmallIntegerField(db_column='roundNum', blank=True, null=True)
    matchid = models.ForeignKey('Frame', models.DO_NOTHING, related_name='matchidDamageFK', db_column='matchID')
    tick_parsed = models.ForeignKey('Frame', models.DO_NOTHING, related_name='tickDamageFK', db_column='tick_parsed', blank=True, null=True)
    id = models.PositiveIntegerField(db_column='ID', primary_key=True)

    class Meta:
        managed = False
        db_table = 'damage'
        unique_together = (('matchid', 'id'),)


class Flash(models.Model):
    tick = models.PositiveIntegerField(blank=True, null=True)
    seconds = models.FloatField(blank=True, null=True)
    clocktime = models.CharField(db_column='clockTime', max_length=5, blank=True, null=True)
    attackerid = models.PositiveIntegerField(db_column='attackerID', blank=True, null=True)
    attackerside = models.CharField(db_column='attackerSide', max_length=2, blank=True, null=True)
    attackerx = models.FloatField(db_column='attackerX', blank=True, null=True)
    attackery = models.FloatField(db_column='attackerY', blank=True, null=True)
    attackerz = models.FloatField(db_column='attackerZ', blank=True, null=True)
    attackerviewx = models.FloatField(db_column='attackerViewX', blank=True, null=True)
    attackerviewy = models.FloatField(db_column='attackerViewY', blank=True, null=True)
    playerid = models.PositiveIntegerField(db_column='playerID', blank=True, null=True)
    playerside = models.CharField(db_column='playerSide', max_length=2, blank=True, null=True)
    playerx = models.FloatField(db_column='playerX', blank=True, null=True)
    playery = models.FloatField(db_column='playerY', blank=True, null=True)
    playerz = models.FloatField(db_column='playerZ', blank=True, null=True)
    playerviewx = models.FloatField(db_column='playerViewX', blank=True, null=True)
    playerviewy = models.FloatField(db_column='playerViewY', blank=True, null=True)
    flashduration = models.FloatField(db_column='flashDuration', blank=True, null=True)
    roundnum = models.PositiveSmallIntegerField(db_column='roundNum', blank=True, null=True)
    tick_parsed = models.ForeignKey('Frame', models.DO_NOTHING, related_name='tickFlashFK', db_column='tick_parsed', blank=True, null=True)
    matchid = models.ForeignKey('Frame', models.DO_NOTHING, related_name='matchidFlashFK', db_column='matchID')
    id = models.PositiveSmallIntegerField(db_column='ID', primary_key=True)

    class Meta:
        managed = False
        db_table = 'flash'
        unique_together = (('matchid', 'id'),)
